Description: This template provisions two Citrix ADC VPX in two different AWS Availability
  Zones and configures them as High-Availabile. This template also gives an option
  to allocate Pooled License to Citrix ADCs while provisioning.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterLabels:
      VPCID:
        default: VPC ID to deploy the resources
      VPCCIDR:
        default: VPC CIDR of the above selected VPC
      RestrictedWebAppCIDR:
        default: Address range to access apps behind the ADCs
      RestrictedSSHCIDR:
        default: Address range to access Management interfaces
      PrimaryManagementPrivateSubnetID:
        default: Subnet ID associated with Primary ADC Management interface
      PrimaryClientPublicSubnetID:
        default: Subnet ID associated with Primary ADC Client interface (Traffic coming
          from `client` to the `ADC VIP`)
      PrimaryServerPrivateSubnetID:
        default: Subnet ID associated with Primary ADC Server interface (Traffic leaving
          from the `ADC SNIP` to the `backend`)
      SecondaryManagementPrivateSubnetID:
        default: Subnet ID associated with Secondary ADC Management interface
      SecondaryClientPublicSubnetID:
        default: Subnet ID associated with Secondary ADC Client interface (Traffic
          coming from `client` to the `ADC VIP`)
      SecondaryServerPrivateSubnetID:
        default: Subnet ID associated with Secondary ADC Server interface (Traffic
          leaving from the `ADC SNIP` to the `backend`)
      VPCTenancy:
        default: ''
      ADCProductName:
        default: Citrix ADC Product Name
      ADCProductVersion:
        default: Citrix ADC Product Version
      ADCCustomPassword:
        default: Citrix ADC management login Password
      RPCNodePassword:
        default: Citrix ADC RPC Node Password
      CitrixADCInstanceType:
        default: Citrix ADC instance type
      KeyPairName:
        default: Keypair to associate to ADCs
      PublishCloudwatchMetrics:
        default: Publish custom metrics to CloudWatch?
      CitrixADCImageID:
        default: Citrix ADC AMI ID
      ManagementENIEIP:
        default: Should PublicIP(EIP) be assigned to management interfaces?
      ClientENIEIP:
        default: Should PublicIP(EIP) be assigned to client interface?
      PrimaryManagementPrivateIP:
        default: Primary Management Private IP (NSIP)
      PrimaryClientPrivateIP:
        default: Primary Client Private IP (VIP)
      PrimaryServerPrivateIP:
        default: Primary Server Private IP (SNIP)
      SecondaryManagementPrivateIP:
        default: Secondary Management Private IP (NSIP)
      SecondaryClientPrivateIP:
        default: Secondary Client Private IP (VIP)
      SecondaryServerPrivateIP:
        default: Secondary Server Private IP (SNIP)
      S3BucketName:
        default: S3 bucket name
      PooledLicense:
        default: Do you want to allocate license from ADM?
      ADMIP:
        default: Reachable ADM or ADM Agent IP
      LicensingMode:
        default: Licensing Mode
      Bandwidth:
        default: Pooled-Licensing Bandwidth in Mbps (Select this if the above LicensingMode
          is `Pooled-Licensing`)
      PooledEdition:
        default: Pooled-Licensing License Edition (Select this if the above LicensingMode
          is `Pooled-Licensing`)
      Platform:
        default: CICO-Licensing Appliance Platform Type (Select this if the above
          LicensingMode is `CICO-Licensing`)
      VCPUEdition:
        default: CPU-Licensing Edition (Select this if the above LicensingMode is
          `CPU-Licensing`)

      ADCRegistration2ADMService:
        default: Do you want to register the ADC to ADM Service?
      ADMAgentIP:
        default: Reachable External ADM Agent IP address
      ADMAgentDeployment:
        default: Do you want to deploy a new ADM Agent?
      ADMAgentRestrictedManagementCIDR:
        default: Address range to access Management interface of Citrix ADM Agent
      ADMAgentInstanceType:
        default: Citrix CitrixADMAgent instance type
      CustomerID:
        default: Your Citrix cloud 'Customer ID (Tenant ID)'
      ClientID:
        default: Your Citrix cloud API 'Client ID'
      ClientSecret:
        default: Your Citrix cloud API 'Client Secret'
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - VPCCIDR
          - RestrictedWebAppCIDR
          - RestrictedSSHCIDR
          - PrimaryManagementPrivateSubnetID
          - PrimaryClientPublicSubnetID
          - PrimaryServerPrivateSubnetID
          - SecondaryManagementPrivateSubnetID
          - SecondaryClientPublicSubnetID
          - SecondaryServerPrivateSubnetID
          - VPCTenancy
      - Label:
          default: Citrix ADC Configuration
        Parameters:
          - ADCProductName
          - ADCProductVersion
          - ADCCustomPassword
          - RPCNodePassword
          - CitrixADCInstanceType
          - KeyPairName
          - PublishCloudwatchMetrics
      - Label:
          default: Optional Configuration
        Parameters:
          - CitrixADCImageID
          - ManagementENIEIP
          - ClientENIEIP
          - PrimaryManagementPrivateIP
          - PrimaryClientPrivateIP
          - PrimaryServerPrivateIP
          - SecondaryManagementPrivateIP
          - SecondaryClientPrivateIP
          - SecondaryServerPrivateIP
          - S3BucketName
      - Label:
          default: License Server Configuration (Optional)
        Parameters:
          - PooledLicense
          - ADMIP
          - LicensingMode
          - Bandwidth
          - PooledEdition
          - Platform
          - VCPUEdition

      - Label:
          default: Citrix ADM Agent Configuration (Optional)
        Parameters:
          - ADCRegistration2ADMService
          - ADMAgentIP
          - ADMAgentDeployment
          - ClientID
          - ClientSecret
          - CustomerID
          - ADMAgentInstanceType
          - ADMAgentRestrictedManagementCIDR

Conditions:
  RPCNodePasswordSameAsADCCustomPassword: !Equals [!Ref RPCNodePassword, ""]
  UseLatestAMI: !Equals
    - !Ref 'CitrixADCImageID'
    - ''
  AssignEIP2ManagementENI: !Equals
    - !Ref 'ManagementENIEIP'
    - 'Yes'
  AssignClientEIP: !Equals
    - !Ref 'ClientENIEIP'
    - 'Yes'
  UsePooledLicense: !Equals
    - !Ref 'PooledLicense'
    - 'Yes'
  DeployADMAgent: !Equals [!Ref ADMAgentDeployment, "Yes"]
  RegisterADC2ADMService: !Equals [!Ref ADCRegistration2ADMService, "Yes"]
Outputs:
  PrimaryCitrixADCIP:
    Description: Primary Citrix ADC Public Management IP
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryCitrixADCIP'
    Value: !GetAtt 'PrimaryCitrixADCStack.Outputs.ManagementEIP'
    Condition: AssignEIP2ManagementENI
  PrimaryCitrixADCInstanceID:
    Description: Primary Citrix ADC Instance ID
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryCitrixADCInstanceID'
    Value: !GetAtt 'PrimaryCitrixADCStack.Outputs.CitrixADCInstanceID'
  ClientVIPIP:
    Description: Client VIP Public IP
    Export:
      Name: !Sub '${AWS::StackName}-ClientVIPIP'
    Value: !GetAtt 'PrimaryCitrixADCStack.Outputs.ClientEIP'
    Condition: AssignClientEIP
  SecondaryCitrixADCIP:
    Description: Secondary Citrix ADC Public Management IP
    Export:
      Name: !Sub '${AWS::StackName}-SecondaryCitrixADCIP'
    Value: !GetAtt 'SecondaryCitrixADCStack.Outputs.ManagementEIP'
    Condition: AssignEIP2ManagementENI
  SecondaryCitrixADCInstanceID:
    Description: Secondary Citrix ADC Instance ID
    Export:
      Name: !Sub '${AWS::StackName}-SecondaryCitrixADCInstanceID'
    Value: !GetAtt 'SecondaryCitrixADCStack.Outputs.CitrixADCInstanceID'
  ManagementSecurityGroupID:
    Description: Security Group associated with Management Interfaces
    Export:
      Name: !Sub '${AWS::StackName}-ManagementSecurityGroupID'
    Value: !GetAtt 'SecurityGroupStack.Outputs.ManagementSG'
  ClientSecurityGroupID:
    Description: Security Group associated with Client Interfaces
    Export:
      Name: !Sub '${AWS::StackName}-ClientSecurityGroupID'
    Value: !GetAtt 'SecurityGroupStack.Outputs.ClientSG'
  ServerSecurityGroupID:
    Description: Security Group associated with Server Interfaces
    Export:
      Name: !Sub '${AWS::StackName}-ServerSecurityGroupID'
    Value: !GetAtt 'SecurityGroupStack.Outputs.ServerSG'
  ADMAgentEIP:
    Condition: DeployADMAgent
    Value: !GetAtt ADMAgentStack.Outputs.ManagementEIP
    Description: Public IP address of the ADM Agent
    Export:
      Name: !Sub "${AWS::StackName}-ADMAgentEIP"
  ADMAgentPrivateIP:
    Condition: DeployADMAgent
    Value: !GetAtt ADMAgentStack.Outputs.ManagementPrivateIP
    Description: Private IP address of the ADM Agent
    Export:
      Name: !Sub "${AWS::StackName}-ADMAgentPrivateIP"
  ADMAgentInstanceID:
    Condition: DeployADMAgent
    Value: !GetAtt ADMAgentStack.Outputs.CitrixADMAgentInstanceID
    Description: Instance ID of the ADM Agent
    Export:
      Name: !Sub "${AWS::StackName}-ADMAgentInstanceID"

Parameters:
  VPCID:
    Type: AWS::EC2::VPC::Id
    Description: ''
  RestrictedWebAppCIDR:
    Type: String
    Description: Must be a valid IP CIDR range of the form x.x.x.x/x
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
  RestrictedSSHCIDR:
    Type: String
    Description: Must be a valid IP CIDR range of the form x.x.x.x/x
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
  PrimaryManagementPrivateSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: ''
  PrimaryClientPublicSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: ''
  PrimaryServerPrivateSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: ''
  SecondaryManagementPrivateSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: ''
  SecondaryClientPublicSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: ''
  SecondaryServerPrivateSubnetID:
    Type: AWS::EC2::Subnet::Id
    Description: ''
  VPCTenancy:
    Type: String
    Description: ''
    Default: default
    AllowedValues:
      - default
      - dedicated
  CitrixADCImageID:
    Type: String
    Description: If left empty, the latest AMI for the above selected Citrix ADC Product
      Name and Version will be provisioned.
  ADCProductName:
    Type: String
    Description: ''
    Default: Citrix ADC VPX - Customer Licensed
    AllowedValues:
      - Citrix ADC VPX - Customer Licensed
      - Citrix ADC VPX Express - 20 Mbps
      - Citrix ADC VPX Standard Edition - 10 Mbps
      - Citrix ADC VPX Standard Edition - 200 Mbps
      - Citrix ADC VPX Standard Edition - 1000 Mbps
      - Citrix ADC VPX Standard Edition - 3Gbps
      - Citrix ADC VPX Standard Edition - 5Gbps
      - Citrix ADC VPX Premium Edition - 10 Mbps
      - Citrix ADC VPX Premium Edition - 200 Mbps
      - Citrix ADC VPX Premium Edition - 1000 Mbps
      - Citrix ADC VPX Premium Edition - 3Gbps
      - Citrix ADC VPX Premium Edition - 5Gbps
      - Citrix ADC VPX Advanced Edition - 10 Mbps
      - Citrix ADC VPX Advanced Edition - 200 Mbps
      - Citrix ADC VPX Advanced Edition - 1000 Mbps
      - Citrix ADC VPX Advanced Edition - 3Gbps
      - Citrix ADC VPX Advanced Edition - 5Gbps
  ADCProductVersion:
    Type: String
    Description: ''
    Default: '13.0'
    AllowedValues:
      - '13.0'
      - '13.1'
  CitrixADCInstanceType:
    Type: String
    Description: ''
    Default: m5.xlarge
    AllowedValues:
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
  ADCCustomPassword:
    Type: String
    AllowedPattern: '[.\S]{8,15}'
    ConstraintDescription: Password length must be minimum 8 and maximum 15 characters.
      Whitespace characters not allowed.
    Description: Strong password recommended. Password length must be minimum 8 and
      maximum 15 characters. Whitespace characters not allowed.
    NoEcho: true
  RPCNodePassword:
    Type: String
    Default: ""
    Description:
      Leave it empty if you want to keep the RPCNodePassword same as the
      ADCCustomPassword. For more details on RPC Node passoword, refer
      https://docs.netscaler.com/en-us/citrix-adc/current-release/getting-started-with-citrix-adc/change-rpc-node-password.html
    NoEcho: true
  KeyPairName:
    Description: ''
    Type: AWS::EC2::KeyPair::KeyName
  PrimaryManagementPrivateIP:
    Type: String
    Default: ''
    Description: If not specified, the private ip will be auto assigned
    AllowedPattern: ()|(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: Must be a valid IP of the form x.x.x.x
  PrimaryClientPrivateIP:
    Type: String
    Default: ''
    Description: If not specified, the private ip will be auto assigned
    AllowedPattern: ()|(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: Must be a valid IP of the form x.x.x.x
  PrimaryServerPrivateIP:
    Type: String
    Default: ''
    Description: If not specified, the private ip will be auto assigned
    AllowedPattern: ()|(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: Must be a valid IP of the form x.x.x.x
  SecondaryManagementPrivateIP:
    Type: String
    Default: ''
    Description: If not specified, the private ip will be auto assigned
    AllowedPattern: ()|(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: Must be a valid IP of the form x.x.x.x
  SecondaryClientPrivateIP:
    Type: String
    Default: ''
    Description: If not specified, the private ip will be auto assigned
    AllowedPattern: ()|(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: Must be a valid IP of the form x.x.x.x
  SecondaryServerPrivateIP:
    Type: String
    Default: ''
    Description: If not specified, the private ip will be auto assigned
    AllowedPattern: ()|(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: Must be a valid IP of the form x.x.x.x
  S3BucketName:
    Type: String
    Description: Leave as it is, if unsure
    Default: citrixadc-automation
  ManagementENIEIP:
    Type: String
    Description: ''
    Default: 'No'
    AllowedValues:
      - 'No'
      - 'Yes'
  ClientENIEIP:
    Type: String
    Description: ''
    Default: 'Yes'
    AllowedValues:
      - 'No'
      - 'Yes'
  PublishCloudwatchMetrics:
    Type: String
    Description: ''
    Default: 'Yes'
    AllowedValues:
      - 'No'
      - 'Yes'
  PooledLicense:
    Type: String
    Description: ''
    Default: 'No'
    AllowedValues:
      - 'No'
      - 'Yes'
  LicensingMode:
    Type: String
    Description: ''
    AllowedValues:
      - ''
      - Pooled-Licensing
      - CICO-Licensing
      - CPU-Licensing
    Default: ''
  ADMIP:
    Type: String
    Default: ''
    Description: ''
    AllowedPattern: ()|(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    ConstraintDescription: Must be a valid IP of the form x.x.x.x
  Bandwidth:
    Type: Number
    Description: 'Should be multile of 10 Mbps. Initial bandwidth of the license in
      Mbps to be allocated after BYOL ADC is provisioned. '
    Default: 0
  PooledEdition:
    Type: String
    Description: ''
    AllowedValues:
      - ''
      - Standard
      - Advanced
      - Premium
    Default: ''
  Platform:
    Type: String
    Description: ''
    AllowedValues:
      - ''
      - VPX-10
      - VPX-25
      - VPX-200
      - VPX-1000
      - VPX-3000
      - VPX-5000
      - VPX-8000
      - VPX-10G
      - VPX-15G
      - VPX-25G
      - VPX-40G
      - VPX-100G
    Default: ''
  VCPUEdition:
    Type: String
    Description: ''
    AllowedValues:
      - ''
      - Standard
      - Advanced
      - Premium
    Default: ''

  ADMAgentDeployment:
    Description: If you select 'No', only give 'Citrix ADM Agent IP' above and ignore the rest of the parametes in this section.
    Type: String
    Default: "No"
    AllowedValues:
      - "Yes"
      - "No"
  ADMAgentIP:
    Default: ""
    Description: Ignore this if you are deploying ADM Agent below. This IP will be auto assigned in the deployment process.
    Type: String

  VPCCIDR:
    Type: String
    Description: Must be a valid IP CIDR range of the form x.x.x.x/x
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
  ADMAgentInstanceType:
    Type: String
    Description: ""
    Default: m5.xlarge
    AllowedValues:
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
  ADMAgentRestrictedManagementCIDR:
    AllowedPattern: ()|(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
    Description: Must be a valid IP CIDR range of the form x.x.x.x/x
    Type: String
  ClientID:
    Description: "If do do not already have, Refer here: https://developer.cloud.com/citrix-cloud/citrix-cloud-api-overview/docs/get-started-with-citrix-cloud-apis"
    Type: String
    Default: ""
  ClientSecret:
    Description: "If do do not already have, Refer here: https://developer.cloud.com/citrix-cloud/citrix-cloud-api-overview/docs/get-started-with-citrix-cloud-apis"
    NoEcho: true
    Type: String
    Default: ""
  CustomerID:
    Description: "If do do not already have, Refer here: https://developer.cloud.com/citrix-cloud/citrix-cloud-api-overview/docs/get-started-with-citrix-cloud-apis"
    Type: String
    Default: ""

  ADCRegistration2ADMService:
    Type: String
    Description: "If you do not want to register the ADC to ADM Service, you can ignore the entire section. In case you want to, you need to subscribe to `Citrix ADM External Agent AMI` in AWS marketplace before running this CFT, so agent will be provisioned to connect to Citrix ADM Service`.  Know more about ADM Service here: https://www.citrix.com/products/citrix-application-delivery-management/"
    Default: "No"
    AllowedValues:
      - "No"
      - "Yes"
AWSTemplateFormatVersion: '2010-09-09'
Resources:
  LambdaCopierStack:
    Properties:
      Parameters:
        S3BucketName: !Sub '${S3BucketName}'
        S3Key: lambda-citrixadc-awscft.zip
      TemplateURL: !Sub 'https://${S3BucketName}.s3.${AWS::URLSuffix}/templates/nested-stacks/cft-stack-lambda-copier.yaml'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-LambdaCopierStack'
    Type: AWS::CloudFormation::Stack
  LatestAMIStack:
    Properties:
      Parameters:
        ADCProductName: !Ref 'ADCProductName'
        ADCProductVersion: !Ref 'ADCProductVersion'
        S3BucketName: !GetAtt 'LambdaCopierStack.Outputs.LambdaZipsBucket'
        S3Key: lambda-citrixadc-awscft.zip
      TemplateURL: !Sub 'https://${S3BucketName}.s3.${AWS::URLSuffix}/templates/nested-stacks/cft-stack-find-latest-ami.yaml'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-LatestAMIStack'
    Type: AWS::CloudFormation::Stack
    Condition: UseLatestAMI
  IAMRoleStack:
    Properties:
      Parameters: {}
      TemplateURL: !Sub 'https://${S3BucketName}.s3.${AWS::URLSuffix}/templates/nested-stacks/cft-stack-citrixadc-iam-role.yaml'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-IAMRoleStack'
    Type: AWS::CloudFormation::Stack
  SecurityGroupStack:
    Properties:
      Parameters:
        RestrictedSSHCIDR: !Ref 'RestrictedSSHCIDR'
        RestrictedWebAppCIDR: !Ref 'RestrictedWebAppCIDR'
        VPCID: !Ref 'VPCID'
      TemplateURL: !Sub 'https://${S3BucketName}.s3.${AWS::URLSuffix}/templates/nested-stacks/cft-stack-securitygroup.yaml'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-SecurityGroupStack'
    Type: AWS::CloudFormation::Stack
  PrimaryCitrixADCStack:
    Properties:
      Parameters:
        ADCInstanceTagName: Primary
        CitrixADCInstanceProfile: !GetAtt 'IAMRoleStack.Outputs.CitrixADCInstanceProfile'
        CitrixADCImageID: !If
          - UseLatestAMI
          - !GetAtt 'LatestAMIStack.Outputs.LatestAMI'
          - !Ref 'CitrixADCImageID'
        CitrixADCInstanceType: !Ref 'CitrixADCInstanceType'
        ClientENIEIP: !Ref 'ClientENIEIP'
        ClientPrivateIP: !Ref 'PrimaryClientPrivateIP'
        ClientPublicSubnetID: !Ref 'PrimaryClientPublicSubnetID'
        ClientSecurityGroupID: !GetAtt 'SecurityGroupStack.Outputs.ClientSG'
        KeyPairName: !Ref 'KeyPairName'
        ManagementENIEIP: !Ref 'ManagementENIEIP'
        ManagementPrivateIP: !Ref 'PrimaryManagementPrivateIP'
        ManagementPrivateSubnetID: !Ref 'PrimaryManagementPrivateSubnetID'
        ManagementSecurityGroupID: !GetAtt 'SecurityGroupStack.Outputs.ManagementSG'
        PublishCloudwatchMetrics: !Ref 'PublishCloudwatchMetrics'
        ServerPrivateIP: !Ref 'PrimaryServerPrivateIP'
        ServerPrivateSubnetID: !Ref 'PrimaryServerPrivateSubnetID'
        ServerSecurityGroupID: !GetAtt 'SecurityGroupStack.Outputs.ServerSG'
        VPCTenancy: !Ref 'VPCTenancy'
      TemplateURL: !Sub 'https://${S3BucketName}.s3.${AWS::URLSuffix}/templates/nested-stacks/cft-stack-standalone-adc.yaml'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-PrimaryCitrixADCStack'
    Type: AWS::CloudFormation::Stack
  SecondaryCitrixADCStack:
    Properties:
      Parameters:
        ADCInstanceTagName: Secondary
        CitrixADCInstanceProfile: !GetAtt 'IAMRoleStack.Outputs.CitrixADCInstanceProfile'
        CitrixADCImageID: !If
          - UseLatestAMI
          - !GetAtt 'LatestAMIStack.Outputs.LatestAMI'
          - !Ref 'CitrixADCImageID'
        CitrixADCInstanceType: !Ref 'CitrixADCInstanceType'
        ClientENIEIP: 'No'
        ClientPrivateIP: !Ref 'SecondaryClientPrivateIP'
        ClientPublicSubnetID: !Ref 'SecondaryClientPublicSubnetID'
        ClientSecurityGroupID: !GetAtt 'SecurityGroupStack.Outputs.ClientSG'
        KeyPairName: !Ref 'KeyPairName'
        ManagementENIEIP: !Ref 'ManagementENIEIP'
        ManagementPrivateIP: !Ref 'SecondaryManagementPrivateIP'
        ManagementPrivateSubnetID: !Ref 'SecondaryManagementPrivateSubnetID'
        ManagementSecurityGroupID: !GetAtt 'SecurityGroupStack.Outputs.ManagementSG'
        PublishCloudwatchMetrics: !Ref 'PublishCloudwatchMetrics'
        ServerPrivateIP: !Ref 'SecondaryServerPrivateIP'
        ServerPrivateSubnetID: !Ref 'SecondaryServerPrivateSubnetID'
        ServerSecurityGroupID: !GetAtt 'SecurityGroupStack.Outputs.ServerSG'
        VPCTenancy: !Ref 'VPCTenancy'
      TemplateURL: !Sub 'https://${S3BucketName}.s3.${AWS::URLSuffix}/templates/nested-stacks/cft-stack-standalone-adc.yaml'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-SecondaryCitrixADCStack'
    Type: AWS::CloudFormation::Stack
  PrimaryPooledLicenseStack:
    Properties:
      Parameters:
        ADCInstanceID: !GetAtt 'PrimaryCitrixADCStack.Outputs.CitrixADCInstanceID'
        ADCCustomPassword: !Ref 'ADCCustomPassword'
        ManagementPrivateIP: !GetAtt 'PrimaryCitrixADCStack.Outputs.ManagementPrivateIP'
        ManagementPrivateSubnetID: !Ref 'PrimaryManagementPrivateSubnetID'
        ManagementSecurityGroupID: !GetAtt 'SecurityGroupStack.Outputs.ManagementSG'
        ADMIP: !Ref 'ADMIP'
        Bandwidth: !Ref 'Bandwidth'
        LicensingMode: !Ref 'LicensingMode'
        Platform: !Ref 'Platform'
        PooledEdition: !Ref 'PooledEdition'
        VCPUEdition: !Ref 'VCPUEdition'
        S3BucketName: !GetAtt 'LambdaCopierStack.Outputs.LambdaZipsBucket'
        S3Key: lambda-citrixadc-awscft.zip
      TemplateURL: !Sub 'https://${S3BucketName}.s3.${AWS::URLSuffix}/templates/nested-stacks/cft-stack-pooled-license.yaml'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-PrimaryPooledLicenseStack'
    Type: AWS::CloudFormation::Stack
    Condition: UsePooledLicense
  SecondaryPooledLicenseStack:
    Properties:
      Parameters:
        ADCInstanceID: !GetAtt 'SecondaryCitrixADCStack.Outputs.CitrixADCInstanceID'
        ADCCustomPassword: !Ref 'ADCCustomPassword'
        ManagementPrivateIP: !GetAtt 'SecondaryCitrixADCStack.Outputs.ManagementPrivateIP'
        ManagementPrivateSubnetID: !Ref 'SecondaryManagementPrivateSubnetID'
        ManagementSecurityGroupID: !GetAtt 'SecurityGroupStack.Outputs.ManagementSG'
        ADMIP: !Ref 'ADMIP'
        Bandwidth: !Ref 'Bandwidth'
        LicensingMode: !Ref 'LicensingMode'
        Platform: !Ref 'Platform'
        PooledEdition: !Ref 'PooledEdition'
        VCPUEdition: !Ref 'VCPUEdition'
        S3BucketName: !GetAtt 'LambdaCopierStack.Outputs.LambdaZipsBucket'
        S3Key: lambda-citrixadc-awscft.zip
      TemplateURL: !Sub 'https://${S3BucketName}.s3.${AWS::URLSuffix}/templates/nested-stacks/cft-stack-pooled-license.yaml'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-SecondaryPooledLicenseStack'
    Type: AWS::CloudFormation::Stack
    Condition: UsePooledLicense
  ConfigureHAAZStack:
    Properties:
      Parameters:
        S3BucketName: !GetAtt 'LambdaCopierStack.Outputs.LambdaZipsBucket'
        S3Key: lambda-citrixadc-awscft.zip
        ManagementSecurityGroupID: !GetAtt 'SecurityGroupStack.Outputs.ManagementSG'
        PrimaryClientPrivateIP: !GetAtt 'PrimaryCitrixADCStack.Outputs.ClientPrivateIP'
        PrimaryClientPublicSubnetID: !Ref 'PrimaryClientPublicSubnetID'
        PrimaryInstanceID: !GetAtt 'PrimaryCitrixADCStack.Outputs.CitrixADCInstanceID'
        ADCCustomPassword: !Ref 'ADCCustomPassword'
        RPCNodePassword: !If
          - RPCNodePasswordSameAsADCCustomPassword
          - !Ref ADCCustomPassword
          - !Ref RPCNodePassword
        PrimaryManagementPrivateIP: !GetAtt 'PrimaryCitrixADCStack.Outputs.ManagementPrivateIP'
        PrimaryManagementPrivateSubnetID: !Ref 'PrimaryManagementPrivateSubnetID'
        SecondaryClientPrivateIP: !GetAtt 'SecondaryCitrixADCStack.Outputs.ClientPrivateIP'
        SecondaryInstanceID: !GetAtt 'SecondaryCitrixADCStack.Outputs.CitrixADCInstanceID'
        SecondaryManagementPrivateIP: !GetAtt 'SecondaryCitrixADCStack.Outputs.ManagementPrivateIP'
        SecondaryManagementPrivateSubnetID: !Ref 'SecondaryManagementPrivateSubnetID'
      TemplateURL: !Sub 'https://${S3BucketName}.s3.${AWS::URLSuffix}/templates/nested-stacks/cft-stack-configure-ha-across-az.yaml'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-ConfigureHAAZStack'
    Type: AWS::CloudFormation::Stack
    Metadata:
      PseudoDependsOn: !If
        - UsePooledLicense
        - - !Ref 'PrimaryPooledLicenseStack'
          - !Ref 'SecondaryPooledLicenseStack'
        - ''

  ADMAgentStack:
    Condition: DeployADMAgent
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::URLSuffix}/templates/external-adm-agent/external-adm-agent.yaml"
      Tags:
        - Key: Name
          Value: !Sub "ADMAgentStack-${AWS::StackName}"
      Parameters:
        VPCID: !Ref "VPCID"
        VPCCIDR: !Ref "VPCCIDR"
        ManagementSubnetID: !Ref PrimaryManagementPrivateSubnetID
        VPCTenancy: !Ref "VPCTenancy"
        ADMAgentInstanceType: !Ref "ADMAgentInstanceType"
        RestrictedManagementCIDR: !Ref "ADMAgentRestrictedManagementCIDR"
        KeyPairName: !Ref KeyPairName
        ManagementENIEIP: "Yes"
        ClientID: !Ref "ClientID"
        ClientSecret: !Ref "ClientSecret"
        CustomerID: !Ref "CustomerID"

  RegisterPrimaryADC2ADMServiceStack:
    DependsOn: ConfigureHAAZStack
    Condition: RegisterADC2ADMService
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::URLSuffix}/templates/nested-stacks/cft-stack-register-adc-to-admservice.yaml"
      Tags:
        - Key: Name
          Value: !Sub "RegisterADC2ADMServiceStack-${AWS::StackName}"
      Parameters:
        VPCID: !Ref "VPCID"
        VPCCIDR: !Ref "VPCCIDR"
        ADMAgentManagementSubnetID: !Ref PrimaryManagementPrivateSubnetID
        VPCTenancy: !Ref "VPCTenancy"
        ADMAgentInstanceType: !Ref "ADMAgentInstanceType"
        ADMAgentRestrictedManagementCIDR: !Ref "ADMAgentRestrictedManagementCIDR"
        ADMAgentKeyPairName: !Ref "KeyPairName"
        ADMAgentManagementENIEIP: "Yes"
        ClientID: !Ref "ClientID"
        ClientSecret: !Ref "ClientSecret"
        CustomerID: !Ref "CustomerID"
        AdcPassword: !Ref "ADCCustomPassword"
        AdcNSIP: !GetAtt "PrimaryCitrixADCStack.Outputs.ManagementPrivateIP"
        ADMAgentDeployment: "No"
        ADMAgentIP: !If
                      - DeployADMAgent
                      - !GetAtt ADMAgentStack.Outputs.ManagementPrivateIP
                      - !Ref ADMAgentIP
        S3BucketName: !Ref "S3BucketName"

  RegisterSecondaryADC2ADMServiceStack:
    DependsOn: ConfigureHAAZStack
    Condition: RegisterADC2ADMService
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "https://${S3BucketName}.s3.${AWS::URLSuffix}/templates/nested-stacks/cft-stack-register-adc-to-admservice.yaml"
      Tags:
        - Key: Name
          Value: !Sub "RegisterADC2ADMServiceStack-${AWS::StackName}"
      Parameters:
        VPCID: !Ref "VPCID"
        VPCCIDR: !Ref "VPCCIDR"
        ADMAgentManagementSubnetID: !Ref PrimaryManagementPrivateSubnetID
        VPCTenancy: !Ref "VPCTenancy"
        ADMAgentInstanceType: !Ref "ADMAgentInstanceType"
        ADMAgentRestrictedManagementCIDR: !Ref "ADMAgentRestrictedManagementCIDR"
        ADMAgentKeyPairName: !Ref "KeyPairName"
        ADMAgentManagementENIEIP: "Yes"
        ClientID: !Ref "ClientID"
        ClientSecret: !Ref "ClientSecret"
        CustomerID: !Ref "CustomerID"
        AdcPassword: !Ref "ADCCustomPassword"
        AdcNSIP: !GetAtt "SecondaryCitrixADCStack.Outputs.ManagementPrivateIP"
        ADMAgentDeployment: "No"
        ADMAgentIP: !If
                      - DeployADMAgent
                      - !GetAtt ADMAgentStack.Outputs.ManagementPrivateIP
                      - !Ref ADMAgentIP
        S3BucketName: !Ref "S3BucketName"