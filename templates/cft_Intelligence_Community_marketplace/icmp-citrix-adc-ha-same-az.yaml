AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  AssignClientEIP: !Equals
    - !Ref 'ClientENIEIP'
    - 'Yes'
  AssignEIP2ManagementENI: !Equals
    - !Ref 'ManagementENIEIP'
    - 'Yes'
  UseCitrixADCImageID: !Not
    - !Equals
      - !Ref 'CitrixADCImageID'
      - ''
Description: This template provisions two Citrix ADC VPX in the same AWS Availability
  Zone and configures them as High-Availabile. This template also gives an option
  to allocate Pooled License to Citrix ADCs while provisioning.
Mappings:
  AWSAMIRegionMap:
    AMI:
      CITRIXADC: Citrix ADC VPX
    ap-east-1:
      CITRIXADC: ami-0b44e0d299d3b3a33
    ap-northeast-1:
      CITRIXADC: ami-0a5d628c2e1ea45e9
    ap-northeast-2:
      CITRIXADC: ami-0ad520c016e96f260
    ap-south-1:
      CITRIXADC: ami-027978a22dc893058
    ap-southeast-1:
      CITRIXADC: ami-0316840d86abe4e5e
    ap-southeast-2:
      CITRIXADC: ami-02098e6dfe08d9299
    ca-central-1:
      CITRIXADC: ami-02cbae7662e592d24
    cn-north-1:
      CITRIXADC: ami-0d9491d2d555c45a8
    cn-northwest-1:
      CITRIXADC: ami-03f29167b9413158e
    eu-central-1:
      CITRIXADC: ami-05d81856537a0cfc2
    eu-north-1:
      CITRIXADC: ami-01672d9e4fd60f85d
    eu-west-1:
      CITRIXADC: ami-023da45cff4446484
    eu-west-2:
      CITRIXADC: ami-037b51b95111f4231
    eu-west-3:
      CITRIXADC: ami-0bd4c025bd6afab4a
    sa-east-1:
      CITRIXADC: ami-0c66fc6fff94c64b9
    us-east-1:
      CITRIXADC: ami-0bb96d1f8f79db909
    us-east-2:
      CITRIXADC: ami-0e8e26c508fa94732
    us-gov-east-1:
      CITRIXADC: ami-21f11d50
    us-gov-west-1:
      CITRIXADC: ami-00d2e361
    us-west-1:
      CITRIXADC: ami-0707f52c208d83427
    us-west-2:
      CITRIXADC: ami-0503d15aed657c87d
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - RestrictedManagementCIDR
          - ManagementPrivateSubnetID
          - ClientPublicSubnetID
          - ServerPrivateSubnetID
          - VPCTenancy
      - Label:
          default: Citrix ADC Configuration
        Parameters:
          - CitrixADCInstanceType
          - KeyPairName
          - PublishCloudwatchMetrics
          - CitrixADCInstanceProfile
      - Label:
          default: Optional Configuration
        Parameters:
          - CitrixADCImageID
          - ManagementENIEIP
          - ClientENIEIP
    ParameterLabels:
      CitrixADCImageID:
        default: Citrix ADC AMI ID
      CitrixADCInstanceProfile:
        default: IAM Role Instance Profie associated to Citrix ADC
      CitrixADCInstanceType:
        default: Citrix ADC instance type
      ClientENIEIP:
        default: Should PublicIP(EIP) be assigned to client interface?
      ClientPublicSubnetID:
        default: Subnet ID associated with Primary and Secondary ADCs Client interface
          (Traffic coming from `client` to the `ADC VIP`)
      KeyPairName:
        default: Keypair to associate to ADCs
      ManagementENIEIP:
        default: Should PublicIP(EIP) be assigned to management interfaces?
      ManagementPrivateSubnetID:
        default: Subnet ID associated with Primary and Secondary ADCs Management interface
      PublishCloudwatchMetrics:
        default: Publish custom metrics to CloudWatch?
      RestrictedManagementCIDR:
        default: Address range to access Management interfaces via SSH, HTTP, HTTPS
          ports
      ServerPrivateSubnetID:
        default: Subnet ID associated with Primary and Secondary ADCs Client interface
          (Traffic leaving from the `ADC SNIP` to the `backend`)
      VPCID:
        default: VPC ID to deploy the resources
      VPCTenancy:
        default: ''
Outputs:
  ClientEIP:
    Condition: AssignClientEIP
    Description: ''
    Export:
      Name: !Sub '${AWS::StackName}-ClientEIP'
    Value: !Ref 'ClientEIP'
  ManagementSG:
    Description: Allow restricted inbound traffic from SSH, HTTP, HTTPS ports and
      everything via TCP within Management Security Group and allow all outbound traffic
      to all destination
    Export:
      Name: !Sub '${AWS::StackName}-ManagementSG'
    Value: !Ref 'ManagementSG'
  PrimaryADCInstanceID:
    Description: Primary Citrix ADC Instance ID
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryADCInstanceID'
    Value: !Ref 'PrimaryInstance'
  PrimaryClientPrivateIP:
    Description: Primary ADC Client Private IP (VIP)
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryClientPrivateIP'
    Value: !GetAtt 'PrimaryClientENI.PrimaryPrivateIpAddress'
  PrimaryManagementEIP:
    Condition: AssignEIP2ManagementENI
    Description: ''
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryManagementEIP'
    Value: !Ref 'PrimaryManagementEIP'
  PrimaryManagementPrivateIP:
    Description: Primary ADC Management Private IP (NSIP)
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryManagementPrivateIP'
    Value: !GetAtt 'PrimaryManagementENI.PrimaryPrivateIpAddress'
  PrimaryServerPrivateIP:
    Description: Primary ADC Server Private IP (SNIP)
    Export:
      Name: !Sub '${AWS::StackName}-PrimaryServerPrivateIP'
    Value: !GetAtt 'PrimaryServerENI.PrimaryPrivateIpAddress'
  SecondaryADCInstanceID:
    Description: Secondary Citrix ADC Instance ID
    Export:
      Name: !Sub '${AWS::StackName}-SecondaryADCInstanceID'
    Value: !Ref 'SecondaryInstance'
  SecondaryClientPrivateIP:
    Description: Secondary ADC Client Private IP (VIP)
    Export:
      Name: !Sub '${AWS::StackName}-SecondaryClientPrivateIP'
    Value: !GetAtt 'SecondaryClientENI.PrimaryPrivateIpAddress'
  SecondaryManagementEIP:
    Condition: AssignEIP2ManagementENI
    Description: ''
    Export:
      Name: !Sub '${AWS::StackName}-SecondaryManagementEIP'
    Value: !Ref 'SecondaryManagementEIP'
  SecondaryManagementPrivateIP:
    Description: Secondary ADC Management Private IP (NSIP)
    Export:
      Name: !Sub '${AWS::StackName}-SecondaryManagementPrivateIP'
    Value: !GetAtt 'SecondaryManagementENI.PrimaryPrivateIpAddress'
  SecondaryServerPrivateIP:
    Description: Secondary ADC Server Private IP (SNIP)
    Export:
      Name: !Sub '${AWS::StackName}-SecondaryServerPrivateIP'
    Value: !GetAtt 'SecondaryServerENI.PrimaryPrivateIpAddress'
Parameters:
  CitrixADCImageID:
    Description: ''
    Type: String
  CitrixADCInstanceProfile:
    Description: Instance Profile Name. Not the complete ARN
    Type: String
  CitrixADCInstanceType:
    AllowedValues:
      - t2.medium
      - t2.large
      - t2.xlarge
      - t2.2xlarge
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - m4.16xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
      - m5.12xlarge
      - m5.16xlarge
      - m5.24xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
      - c5.12xlarge
      - c5.18xlarge
      - c5.24xlarge
      - c5n.large
      - c5n.xlarge
      - c5n.2xlarge
      - c5n.4xlarge
      - c5n.9xlarge
      - c5n.18xlarge
    Default: m5.xlarge
    Description: ''
    Type: String
  ClientENIEIP:
    AllowedValues:
      - 'No'
      - 'Yes'
    Default: 'No'
    Description: ''
    Type: String
  ClientPublicSubnetID:
    Description: ''
    Type: AWS::EC2::Subnet::Id
  KeyPairName:
    Description: ''
    Type: AWS::EC2::KeyPair::KeyName
  ManagementENIEIP:
    AllowedValues:
      - 'No'
      - 'Yes'
    Default: 'No'
    Description: If not specified, the private ip will be auto assigned
    Type: String
  ManagementPrivateSubnetID:
    Description: ''
    Type: AWS::EC2::Subnet::Id
  PublishCloudwatchMetrics:
    AllowedValues:
      - 'No'
      - 'Yes'
    Default: 'Yes'
    Description: ''
    Type: String
  RestrictedManagementCIDR:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
    Description: Must be a valid IP CIDR range of the form x.x.x.x/x
    Type: String
  ServerPrivateSubnetID:
    Description: ''
    Type: AWS::EC2::Subnet::Id
  VPCID:
    Description: ''
    Type: AWS::EC2::VPC::Id
  VPCTenancy:
    AllowedValues:
      - default
      - dedicated
    Default: default
    Description: ''
    Type: String
Resources:
  AssociateClientEIP2ENI:
    Condition: AssignClientEIP
    Properties:
      AllocationId: !GetAtt 'ClientEIP.AllocationId'
      NetworkInterfaceId: !Ref 'PrimaryClientENI'
      PrivateIpAddress: !Select
        - 0
        - !GetAtt 'PrimaryClientENI.SecondaryPrivateIpAddresses'
    Type: AWS::EC2::EIPAssociation
  AssociatePrimaryManagementEIP2ENI:
    Condition: AssignEIP2ManagementENI
    Properties:
      AllocationId: !GetAtt 'PrimaryManagementEIP.AllocationId'
      NetworkInterfaceId: !Ref 'PrimaryManagementENI'
      PrivateIpAddress: !GetAtt 'PrimaryManagementENI.PrimaryPrivateIpAddress'
    Type: AWS::EC2::EIPAssociation
  AssociateSecondaryManagementEIP2ENI:
    Condition: AssignEIP2ManagementENI
    Properties:
      AllocationId: !GetAtt 'SecondaryManagementEIP.AllocationId'
      NetworkInterfaceId: !Ref 'SecondaryManagementENI'
      PrivateIpAddress: !GetAtt 'SecondaryManagementENI.PrimaryPrivateIpAddress'
    Type: AWS::EC2::EIPAssociation
  ClientEIP:
    Condition: AssignClientEIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-ClientEIP'
    Type: AWS::EC2::EIP
  ManagementInboundRule:
    Properties:
      Description: ManagementSG
      FromPort: 0
      GroupId: !GetAtt 'ManagementSG.GroupId'
      IpProtocol: tcp
      SourceSecurityGroupId: !GetAtt 'ManagementSG.GroupId'
      ToPort: 65535
    Type: AWS::EC2::SecurityGroupIngress
  ManagementSG:
    Properties:
      GroupDescription: Allow restricted inbound traffic from SSH, HTTP, HTTPS ports
        and everything via TCP within Management Security Group and allow all outbound
        traffic to all destination
      GroupName: !Sub '${AWS::StackName}-ManagementSG'
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all traffic to all destination
          IpProtocol: '-1'
      SecurityGroupIngress:
        - CidrIp: !Ref 'RestrictedManagementCIDR'
          Description: SSH port
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: !Ref 'RestrictedManagementCIDR'
          Description: HTTP port
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
        - CidrIp: !Ref 'RestrictedManagementCIDR'
          Description: HTTPS port
          FromPort: 443
          IpProtocol: tcp
          ToPort: 443
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-ManagementSG'
      VpcId: !Ref 'VPCID'
    Type: AWS::EC2::SecurityGroup
  PrimaryClientENI:
    Properties:
      Description: Primary ADC Client Private IP (VIP)
      PrivateIpAddress: !Ref 'AWS::NoValue'
      SecondaryPrivateIpAddressCount: 1
      SubnetId: !Ref 'ClientPublicSubnetID'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-PrimaryClientENI'
    Type: AWS::EC2::NetworkInterface
  PrimaryInstance:
    Properties:
      IamInstanceProfile: !Ref 'CitrixADCInstanceProfile'
      ImageId: !If
        - UseCitrixADCImageID
        - !Ref CitrixADCImageID
        - !FindInMap
          - AWSAMIRegionMap
          - !Ref AWS::Region
          - CITRIXADC
      InstanceType: !Ref 'CitrixADCInstanceType'
      KeyName: !Ref 'KeyPairName'
      NetworkInterfaces:
        - DeviceIndex: '0'
          NetworkInterfaceId: !Ref 'PrimaryManagementENI'
        - DeviceIndex: '1'
          NetworkInterfaceId: !Ref 'PrimaryClientENI'
        - DeviceIndex: '2'
          NetworkInterfaceId: !Ref 'PrimaryServerENI'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-PrimaryInstance'
      Tenancy: !Ref 'VPCTenancy'
      UserData: !Base64
        Fn::Sub: |-
          PublishCloudwatchMetrics=${PublishCloudwatchMetrics}
          HAPeerIP=${SecondaryManagementENI.PrimaryPrivateIpAddress}
    Type: AWS::EC2::Instance
  PrimaryManagementEIP:
    Condition: AssignEIP2ManagementENI
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-PrimaryManagementEIP'
    Type: AWS::EC2::EIP
  PrimaryManagementENI:
    Properties:
      Description: Primary ADC Management Private IP (NSIP)
      GroupSet:
        - !Ref 'ManagementSG'
      PrivateIpAddress: !Ref 'AWS::NoValue'
      SubnetId: !Ref 'ManagementPrivateSubnetID'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-PrimaryManagementENI'
    Type: AWS::EC2::NetworkInterface
  PrimaryServerENI:
    Properties:
      Description: Primary ADC Server Private IP (SNIP)
      PrivateIpAddress: !Ref 'AWS::NoValue'
      SecondaryPrivateIpAddressCount: 1
      SubnetId: !Ref 'ServerPrivateSubnetID'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-PrimaryServerENI'
    Type: AWS::EC2::NetworkInterface
  SecondaryClientENI:
    Properties:
      Description: Secondary ADC Client Private IP (VIP)
      PrivateIpAddress: !Ref 'AWS::NoValue'
      SubnetId: !Ref 'ClientPublicSubnetID'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-SecondaryClientENI'
    Type: AWS::EC2::NetworkInterface
  SecondaryInstance:
    Properties:
      IamInstanceProfile: !Ref 'CitrixADCInstanceProfile'
      ImageId: !If
        - UseCitrixADCImageID
        - !Ref CitrixADCImageID
        - !FindInMap
          - AWSAMIRegionMap
          - !Ref AWS::Region
          - CITRIXADC
      InstanceType: !Ref 'CitrixADCInstanceType'
      KeyName: !Ref 'KeyPairName'
      NetworkInterfaces:
        - DeviceIndex: '0'
          NetworkInterfaceId: !Ref 'SecondaryManagementENI'
        - DeviceIndex: '1'
          NetworkInterfaceId: !Ref 'SecondaryClientENI'
        - DeviceIndex: '2'
          NetworkInterfaceId: !Ref 'SecondaryServerENI'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-SecondaryInstance'
      Tenancy: !Ref 'VPCTenancy'
      UserData: !Base64
        Fn::Sub: |-
          PublishCloudwatchMetrics=${PublishCloudwatchMetrics}
          HAPeerIP=${PrimaryManagementENI.PrimaryPrivateIpAddress}
          HAPeerInstanceId=${PrimaryInstance}
    Type: AWS::EC2::Instance
  SecondaryManagementEIP:
    Condition: AssignEIP2ManagementENI
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-SecondaryManagementEIP'
    Type: AWS::EC2::EIP
  SecondaryManagementENI:
    Properties:
      Description: Secondary ADC Management Private IP (NSIP)
      GroupSet:
        - !Ref 'ManagementSG'
      PrivateIpAddress: !Ref 'AWS::NoValue'
      SubnetId: !Ref 'ManagementPrivateSubnetID'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-SecondaryManagementENI'
    Type: AWS::EC2::NetworkInterface
  SecondaryServerENI:
    Properties:
      Description: Secondary ADC Server Private IP (SNIP)
      PrivateIpAddress: !Ref 'AWS::NoValue'
      SubnetId: !Ref 'ServerPrivateSubnetID'
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-SecondaryServerENI'
    Type: AWS::EC2::NetworkInterface

